#version 310 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _camera_pixel_size_and_screen_size;
uniform 	vec4 hlslcc_mtx4x4_projection_matrix[4];
uniform 	vec4 hlslcc_mtx4x4_camera_to_world_matrix[4];
uniform 	int frame_index;
uniform 	int _encoded_depth_mip_level;
uniform 	float _ao_cascade_sample_radius;
UNITY_LOCATION(0) uniform mediump sampler2DArray g_stbn_vec4_texture_array;
UNITY_LOCATION(1) uniform mediump sampler2D _GBuffer_NormalMipChain;
UNITY_LOCATION(2) uniform mediump sampler2D _GBuffer_DepthMipChain;
layout(location = 0) in highp vec2 vs_TEXCOORD0;
layout(location = 0) out highp vec4 SV_Target0;
vec2 u_xlat0;
uvec4 u_xlatu0;
vec3 u_xlat1;
uvec4 u_xlatu1;
bvec2 u_xlatb1;
vec3 u_xlat2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec4 u_xlat16_4;
mediump vec3 u_xlat16_5;
vec2 u_xlat6;
vec4 u_xlat7;
float u_xlat8;
mediump vec4 u_xlat16_9;
mediump vec2 u_xlat16_10;
vec4 u_xlat11;
bvec2 u_xlatb11;
vec4 u_xlat12;
bvec2 u_xlatb12;
vec4 u_xlat13;
mediump vec2 u_xlat16_13;
vec3 u_xlat14;
mediump vec2 u_xlat16_15;
float u_xlat16;
float u_xlat20;
mediump float u_xlat16_20;
mediump float u_xlat16_21;
vec3 u_xlat24;
mediump vec2 u_xlat16_24;
bvec2 u_xlatb24;
vec2 u_xlat32;
bool u_xlatb32;
float u_xlat33;
mediump vec2 u_xlat16_35;
mediump float u_xlat16_36;
mediump float u_xlat16_37;
vec2 u_xlat38;
mediump vec2 u_xlat16_38;
int u_xlati38;
uint u_xlatu38;
bool u_xlatb38;
float u_xlat39;
mediump float u_xlat16_39;
uint u_xlatu39;
bool u_xlatb39;
bool u_xlatb40;
mediump vec2 u_xlat16_42;
mediump vec2 u_xlat16_45;
mediump vec2 u_xlat16_47;
float u_xlat48;
float u_xlat49;
float u_xlat50;
uint u_xlatu50;
mediump float u_xlat16_53;
float u_xlat54;
mediump float u_xlat16_54;
int u_xlati54;
uint u_xlatu54;
void main()
{
vec4 hlslcc_FragCoord = vec4(gl_FragCoord.xyz, 1.0/gl_FragCoord.w);
    u_xlat0.xy = floor(hlslcc_FragCoord.xy);
    u_xlatu0.xy = uvec2(u_xlat0.xy);
    u_xlatu0.xy = u_xlatu0.xy & uvec2(127u, 127u);
    u_xlatu0.z = uint(frame_index) & 63u;
    u_xlatu0.w = 0u;
    u_xlat0.xy = texelFetch(g_stbn_vec4_texture_array, ivec3(u_xlatu0.xyz), int(u_xlatu0.w)).xy;
    u_xlat32.xy = vs_TEXCOORD0.xy * _camera_pixel_size_and_screen_size.zw + vec2(-0.5, -0.5);
    u_xlat32.xy = roundEven(u_xlat32.xy);
    u_xlatu1.xy =  uvec2(ivec2(u_xlat32.xy));
    u_xlatu1.zw = uvec2(ivec2(_encoded_depth_mip_level, _encoded_depth_mip_level)) + uvec2(4294967295u, 4294967295u);
    u_xlat2.z = texelFetch(_GBuffer_DepthMipChain, ivec2(u_xlatu1.xy), int(u_xlatu1.w)).x;
    u_xlat32.xy = texelFetch(_GBuffer_NormalMipChain, ivec2(u_xlatu1.xy), int(u_xlatu1.w)).xy;
    u_xlat16_3.xy = u_xlat32.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
    u_xlat16_4.xyz = -abs(u_xlat16_3.xyx) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.z = -abs(u_xlat16_3.y) + u_xlat16_4.x;
    u_xlatb32 = u_xlat16_5.z<0.0;
    u_xlatb1.xy = greaterThanEqual(u_xlat16_3.xyxx, vec4(0.0, 0.0, 0.0, 0.0)).xy;
    u_xlat16_35.x = (u_xlatb1.x) ? u_xlat16_4.y : (-u_xlat16_4.y);
    u_xlat16_35.y = (u_xlatb1.y) ? u_xlat16_4.z : (-u_xlat16_4.z);
    u_xlat16_5.xy = (bool(u_xlatb32)) ? u_xlat16_35.xy : u_xlat16_3.xy;
    u_xlat16_3.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
    u_xlat16_3.x = inversesqrt(u_xlat16_3.x);
    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat1.x = dot(hlslcc_mtx4x4_camera_to_world_matrix[0].xyz, u_xlat16_3.xyz);
    u_xlat1.y = dot(hlslcc_mtx4x4_camera_to_world_matrix[1].xyz, u_xlat16_3.xyz);
    u_xlat1.z = dot(hlslcc_mtx4x4_camera_to_world_matrix[2].xyz, u_xlat16_3.xyz);
    u_xlat32.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat32.x = inversesqrt(u_xlat32.x);
    u_xlat1.xyz = u_xlat32.xxx * u_xlat1.xyz;
    u_xlat32.xy = vs_TEXCOORD0.xy * vec2(2.0, 2.0) + vec2(-1.0, -1.0);
    u_xlat32.xy = u_xlat32.xy + (-hlslcc_mtx4x4_projection_matrix[2].xy);
    u_xlat6.x = hlslcc_mtx4x4_projection_matrix[0].x;
    u_xlat6.y = hlslcc_mtx4x4_projection_matrix[1].y;
    u_xlat32.xy = u_xlat32.xy / u_xlat6.xy;
    u_xlat2.xy = u_xlat2.zz * u_xlat32.xy;
    u_xlat7.xyz = u_xlat2.xyz * vec3(0.995999992, 0.995999992, -0.995999992);
    u_xlat32.x = dot((-u_xlat7.xyz), (-u_xlat7.xyz));
    u_xlat32.x = inversesqrt(u_xlat32.x);
    u_xlat7.xyw = u_xlat32.xxx * (-u_xlat7.xyz);
    u_xlat3.yw = _camera_pixel_size_and_screen_size.ww * _camera_pixel_size_and_screen_size.xx;
    u_xlat32.x = _ao_cascade_sample_radius * 0.0299999993;
    u_xlat48 = dot(u_xlat32.xx, abs(u_xlat7.zz));
    u_xlat50 = u_xlat2.z * -0.0498000011;
    u_xlat50 = min(abs(u_xlat50), 1.0);
    u_xlat48 = u_xlat48 + 1.0;
    u_xlat48 = log2(u_xlat48);
    u_xlat48 = u_xlat48 * 0.415888339;
    u_xlat48 = u_xlat50 * 0.200000003 + u_xlat48;
    u_xlat16_4.xyz = u_xlat0.xyy + vec3(-0.5, 1.0, 2.0);
    u_xlat0.x = u_xlat16_4.x * 1.57079637;
    u_xlat8 = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat16_4.xw = u_xlat1.yz * u_xlat7.wx;
    u_xlat16_4.xw = u_xlat7.yw * u_xlat1.zx + (-u_xlat16_4.xw);
    u_xlat16_5.x = dot(u_xlat1.xyz, u_xlat7.xyw);
    u_xlat16_21 = u_xlat0.y * 0.333333343;
    u_xlat16 = float(int(u_xlatu1.w));
    u_xlat33 = u_xlat48 + u_xlat48;
    u_xlat16_9 = u_xlat16_4.yyzz * vec4(0.333333343, 0.333333343, 0.333333343, 0.333333343);
    u_xlat3.x = float(1.0);
    u_xlat3.z = float(1.0);
    u_xlat16_20 = 0.0;
    u_xlat49 = 0.0;
    u_xlat16_10.x = u_xlat0.x;
    u_xlat16_10.y = u_xlat8;
    u_xlatu50 = 0u;
    while(true){
        u_xlatb38 = u_xlatu50>=2u;
        if(u_xlatb38){break;}
        u_xlat11 = u_xlat32.xxxx * u_xlat16_10.xyxy;
        u_xlat11 = u_xlat3 * u_xlat11;
        u_xlat16_36 = dot(u_xlat16_10.xy, u_xlat7.xy);
        u_xlat16_37 = dot(u_xlat16_10.xy, u_xlat1.xy);
        u_xlat16_53 = dot(u_xlat16_10.xy, u_xlat16_4.xw);
        u_xlat16_42.x = (-u_xlat16_36) * u_xlat16_36 + 1.0;
        u_xlat16_42.x = max(u_xlat16_42.x, 0.0);
        u_xlat16_42.x = inversesqrt(u_xlat16_42.x);
        u_xlat16_53 = u_xlat16_53 * u_xlat16_42.x;
        u_xlat16_53 = (-u_xlat16_53) * u_xlat16_53 + 1.0;
        u_xlat16_53 = max(u_xlat16_53, 0.0);
        u_xlat16_53 = sqrt(u_xlat16_53);
        u_xlat38.x = float(1.0) / float(u_xlat16_53);
        u_xlat38.x = u_xlat16_5.x * u_xlat38.x;
        u_xlat38.x = clamp(u_xlat38.x, 0.0, 1.0);
        u_xlat54 = u_xlat38.x * -0.156582996 + 1.57079637;
        u_xlat16_42.x = (-u_xlat38.x) + 1.0;
        u_xlat16_42.x = sqrt(u_xlat16_42.x);
        u_xlat16_42.x = u_xlat54 * u_xlat16_42.x;
        u_xlat16_36 = u_xlat16_5.x * u_xlat16_36;
        u_xlatb38 = u_xlat16_37<u_xlat16_36;
        u_xlat16_36 = (u_xlatb38) ? (-u_xlat16_42.x) : u_xlat16_42.x;
        u_xlat38.xy = vec2(u_xlat16_21) * u_xlat11.zw + vs_TEXCOORD0.xy;
        u_xlat16_39 = textureLod(_GBuffer_DepthMipChain, u_xlat38.xy, u_xlat16).x;
        u_xlat38.xy = u_xlat38.xy * vec2(2.0, 2.0) + (-hlslcc_mtx4x4_projection_matrix[2].xy);
        u_xlat38.xy = u_xlat38.xy + vec2(-1.0, -1.0);
        u_xlat38.xy = u_xlat38.xy / u_xlat6.xy;
        u_xlat12.xy = vec2(u_xlat16_39) * u_xlat38.xy;
        u_xlat12.z = (-u_xlat16_39);
        u_xlat24.xyz = (-u_xlat2.xyz) * vec3(0.995999992, 0.995999992, -0.995999992) + u_xlat12.xyz;
        u_xlat12.y = dot(u_xlat24.xyz, u_xlat7.xyw);
        u_xlat38.x = dot(u_xlat24.xyz, u_xlat24.xyz);
        u_xlat12.x = (-u_xlat48) + u_xlat12.y;
        u_xlat54 = (-u_xlat33) * u_xlat12.y + u_xlat38.x;
        u_xlat54 = u_xlat48 * u_xlat48 + u_xlat54;
        u_xlat16_13.y = inversesqrt(u_xlat38.x);
        u_xlat16_13.x = inversesqrt(u_xlat54);
        u_xlat16_42.xy = u_xlat12.xy * u_xlat16_13.xy;
        u_xlat16_38.xy = abs(u_xlat16_42.xy) * vec2(-0.156582996, -0.156582996) + vec2(1.57079637, 1.57079637);
        u_xlat16_13.xy = -abs(u_xlat16_42.xy) + vec2(1.0, 1.0);
        u_xlat16_13.xy = sqrt(u_xlat16_13.xy);
        u_xlat16_45.xy = u_xlat16_38.xy * u_xlat16_13.xy;
        u_xlatb24.xy = greaterThanEqual(u_xlat16_42.xyxx, vec4(0.0, 0.0, 0.0, 0.0)).xy;
        u_xlat16_38.xy = (-u_xlat16_38.xy) * u_xlat16_13.xy + vec2(3.14159274, 3.14159274);
        u_xlat38.x = (u_xlatb24.x) ? u_xlat16_45.x : u_xlat16_38.x;
        u_xlat38.y = (u_xlatb24.y) ? u_xlat16_45.y : u_xlat16_38.y;
        u_xlat16_42.xy = vec2(u_xlat16_36) + (-u_xlat38.xy);
        u_xlat16_38.xy = u_xlat16_42.xy * vec2(0.318309873, 0.318309873) + vec2(0.5, 0.5);
        u_xlat16_38.xy = clamp(u_xlat16_38.xy, 0.0, 1.0);
        u_xlat16_42.xy = u_xlat16_38.xy * u_xlat16_38.xy;
        u_xlat16_13.xy = (-u_xlat16_38.xy) * vec2(2.0, 2.0) + vec2(3.0, 3.0);
        u_xlat16_37 = u_xlat16_42.x * u_xlat16_13.x;
        u_xlat16_42.x = u_xlat16_37 * 32.0;
        u_xlatu38 = uint(u_xlat16_42.x);
        u_xlat16_37 = u_xlat16_42.y * u_xlat16_13.y + (-u_xlat16_37);
        u_xlat16_37 = u_xlat16_37 * 32.0 + 0.5;
        u_xlatu54 = uint(u_xlat16_37);
        u_xlatb39 = int(u_xlatu54)==0;
        u_xlatb24.x = u_xlatu38>=32u;
        u_xlatb39 = u_xlatb39 || u_xlatb24.x;
        u_xlati54 = 1 << (int(u_xlatu54) & int(0x1F));
        u_xlati54 = u_xlati54 + int(0xFFFFFFFFu);
        u_xlati38 = u_xlati54 << (int(u_xlatu38) & int(0x1F));
        u_xlati38 = ~(u_xlati38);
        u_xlati38 = (u_xlatb39) ? int(0xFFFFFFFFu) : u_xlati38;
        u_xlat12 = u_xlat16_9.yyww * u_xlat11.zwzw + vs_TEXCOORD0.xyxy;
        u_xlat16_54 = textureLod(_GBuffer_DepthMipChain, u_xlat12.xy, u_xlat16).x;
        u_xlat13 = u_xlat12 * vec4(2.0, 2.0, 2.0, 2.0) + (-hlslcc_mtx4x4_projection_matrix[2].xyxy);
        u_xlat13 = u_xlat13 + vec4(-1.0, -1.0, -1.0, -1.0);
        u_xlat13 = u_xlat13 / u_xlat6.xyxy;
        u_xlat14.xy = vec2(u_xlat16_54) * u_xlat13.xy;
        u_xlat14.z = (-u_xlat16_54);
        u_xlat24.xyz = (-u_xlat2.xyz) * vec3(0.995999992, 0.995999992, -0.995999992) + u_xlat14.xyz;
        u_xlat12.y = dot(u_xlat24.xyz, u_xlat7.xyw);
        u_xlat54 = dot(u_xlat24.xyz, u_xlat24.xyz);
        u_xlat12.x = (-u_xlat48) + u_xlat12.y;
        u_xlat39 = (-u_xlat33) * u_xlat12.y + u_xlat54;
        u_xlat39 = u_xlat48 * u_xlat48 + u_xlat39;
        u_xlat16_15.y = inversesqrt(u_xlat54);
        u_xlat16_15.x = inversesqrt(u_xlat39);
        u_xlat16_42.xy = u_xlat12.xy * u_xlat16_15.xy;
        u_xlat16_24.xy = abs(u_xlat16_42.xy) * vec2(-0.156582996, -0.156582996) + vec2(1.57079637, 1.57079637);
        u_xlat16_15.xy = -abs(u_xlat16_42.xy) + vec2(1.0, 1.0);
        u_xlat16_15.xy = sqrt(u_xlat16_15.xy);
        u_xlat16_47.xy = u_xlat16_24.xy * u_xlat16_15.xy;
        u_xlatb12.xy = greaterThanEqual(u_xlat16_42.xyxx, vec4(0.0, 0.0, 0.0, 0.0)).xy;
        u_xlat16_24.xy = (-u_xlat16_24.xy) * u_xlat16_15.xy + vec2(3.14159274, 3.14159274);
        u_xlat24.x = (u_xlatb12.x) ? u_xlat16_47.x : u_xlat16_24.x;
        u_xlat24.y = (u_xlatb12.y) ? u_xlat16_47.y : u_xlat16_24.y;
        u_xlat16_42.xy = vec2(u_xlat16_36) + (-u_xlat24.xy);
        u_xlat16_24.xy = u_xlat16_42.xy * vec2(0.318309873, 0.318309873) + vec2(0.5, 0.5);
        u_xlat16_24.xy = clamp(u_xlat16_24.xy, 0.0, 1.0);
        u_xlat16_42.xy = u_xlat16_24.xy * u_xlat16_24.xy;
        u_xlat16_15.xy = (-u_xlat16_24.xy) * vec2(2.0, 2.0) + vec2(3.0, 3.0);
        u_xlat16_37 = u_xlat16_42.x * u_xlat16_15.x;
        u_xlat16_42.x = u_xlat16_37 * 32.0;
        u_xlatu54 = uint(u_xlat16_42.x);
        u_xlat16_37 = u_xlat16_42.y * u_xlat16_15.y + (-u_xlat16_37);
        u_xlat16_37 = u_xlat16_37 * 32.0 + 0.5;
        u_xlatu39 = uint(u_xlat16_37);
        u_xlatb24.x = int(u_xlatu39)==0;
        u_xlatb40 = u_xlatu54>=32u;
        u_xlatb24.x = u_xlatb40 || u_xlatb24.x;
        u_xlati54 = int(bitfieldInsert(u_xlati38, 0, int(u_xlatu54) & int(0x1F), int(u_xlatu39)));
        u_xlati38 = (u_xlatb24.x) ? u_xlati38 : u_xlati54;
        u_xlat16_54 = textureLod(_GBuffer_DepthMipChain, u_xlat12.zw, u_xlat16).x;
        u_xlat12.xy = vec2(u_xlat16_54) * u_xlat13.zw;
        u_xlat12.z = (-u_xlat16_54);
        u_xlat24.xyz = (-u_xlat2.xyz) * vec3(0.995999992, 0.995999992, -0.995999992) + u_xlat12.xyz;
        u_xlat12.y = dot(u_xlat24.xyz, u_xlat7.xyw);
        u_xlat54 = dot(u_xlat24.xyz, u_xlat24.xyz);
        u_xlat12.x = (-u_xlat48) + u_xlat12.y;
        u_xlat39 = (-u_xlat33) * u_xlat12.y + u_xlat54;
        u_xlat39 = u_xlat48 * u_xlat48 + u_xlat39;
        u_xlat16_15.y = inversesqrt(u_xlat54);
        u_xlat16_15.x = inversesqrt(u_xlat39);
        u_xlat16_42.xy = u_xlat12.xy * u_xlat16_15.xy;
        u_xlat16_24.xy = abs(u_xlat16_42.xy) * vec2(-0.156582996, -0.156582996) + vec2(1.57079637, 1.57079637);
        u_xlat16_15.xy = -abs(u_xlat16_42.xy) + vec2(1.0, 1.0);
        u_xlat16_15.xy = sqrt(u_xlat16_15.xy);
        u_xlat16_47.xy = u_xlat16_24.xy * u_xlat16_15.xy;
        u_xlatb12.xy = greaterThanEqual(u_xlat16_42.xyxx, vec4(0.0, 0.0, 0.0, 0.0)).xy;
        u_xlat16_24.xy = (-u_xlat16_24.xy) * u_xlat16_15.xy + vec2(3.14159274, 3.14159274);
        u_xlat24.x = (u_xlatb12.x) ? u_xlat16_47.x : u_xlat16_24.x;
        u_xlat24.y = (u_xlatb12.y) ? u_xlat16_47.y : u_xlat16_24.y;
        u_xlat16_42.xy = vec2(u_xlat16_36) + (-u_xlat24.xy);
        u_xlat16_24.xy = u_xlat16_42.xy * vec2(0.318309873, 0.318309873) + vec2(0.5, 0.5);
        u_xlat16_24.xy = clamp(u_xlat16_24.xy, 0.0, 1.0);
        u_xlat16_42.xy = u_xlat16_24.xy * u_xlat16_24.xy;
        u_xlat16_15.xy = (-u_xlat16_24.xy) * vec2(2.0, 2.0) + vec2(3.0, 3.0);
        u_xlat16_37 = u_xlat16_42.x * u_xlat16_15.x;
        u_xlat16_42.x = u_xlat16_37 * 32.0;
        u_xlatu54 = uint(u_xlat16_42.x);
        u_xlat16_37 = u_xlat16_42.y * u_xlat16_15.y + (-u_xlat16_37);
        u_xlat16_37 = u_xlat16_37 * 32.0 + 0.5;
        u_xlatu39 = uint(u_xlat16_37);
        u_xlatb24.x = int(u_xlatu39)==0;
        u_xlatb40 = u_xlatu54>=32u;
        u_xlatb24.x = u_xlatb40 || u_xlatb24.x;
        u_xlati54 = int(bitfieldInsert(u_xlati38, 0, int(u_xlatu54) & int(0x1F), int(u_xlatu39)));
        u_xlati38 = (u_xlatb24.x) ? u_xlati38 : u_xlati54;
        u_xlat24.xy = vec2(u_xlat16_21) * (-u_xlat11.zw) + vs_TEXCOORD0.xy;
        u_xlat16_54 = textureLod(_GBuffer_DepthMipChain, u_xlat24.xy, u_xlat16).x;
        u_xlat24.xy = u_xlat24.xy * vec2(2.0, 2.0) + (-hlslcc_mtx4x4_projection_matrix[2].xy);
        u_xlat24.xy = u_xlat24.xy + vec2(-1.0, -1.0);
        u_xlat24.xy = u_xlat24.xy / u_xlat6.xy;
        u_xlat12.xy = vec2(u_xlat16_54) * u_xlat24.xy;
        u_xlat12.z = (-u_xlat16_54);
        u_xlat24.xyz = (-u_xlat2.xyz) * vec3(0.995999992, 0.995999992, -0.995999992) + u_xlat12.xyz;
        u_xlat12.x = dot(u_xlat24.xyz, u_xlat7.xyw);
        u_xlat54 = dot(u_xlat24.xyz, u_xlat24.xyz);
        u_xlat12.y = (-u_xlat48) + u_xlat12.x;
        u_xlat39 = (-u_xlat33) * u_xlat12.x + u_xlat54;
        u_xlat39 = u_xlat48 * u_xlat48 + u_xlat39;
        u_xlat16_15.x = inversesqrt(u_xlat54);
        u_xlat16_15.y = inversesqrt(u_xlat39);
        u_xlat16_42.xy = u_xlat12.xy * u_xlat16_15.xy;
        u_xlat16_24.xy = abs(u_xlat16_42.xy) * vec2(-0.156582996, -0.156582996) + vec2(1.57079637, 1.57079637);
        u_xlat16_15.xy = -abs(u_xlat16_42.xy) + vec2(1.0, 1.0);
        u_xlat16_15.xy = sqrt(u_xlat16_15.xy);
        u_xlat16_47.xy = u_xlat16_24.xy * u_xlat16_15.xy;
        u_xlatb12.xy = greaterThanEqual(u_xlat16_42.xyxx, vec4(0.0, 0.0, 0.0, 0.0)).xy;
        u_xlat16_24.xy = (-u_xlat16_24.xy) * u_xlat16_15.xy + vec2(3.14159274, 3.14159274);
        u_xlat24.x = (u_xlatb12.x) ? u_xlat16_47.x : u_xlat16_24.x;
        u_xlat24.y = (u_xlatb12.y) ? u_xlat16_47.y : u_xlat16_24.y;
        u_xlat16_42.xy = vec2(u_xlat16_36) + u_xlat24.xy;
        u_xlat16_24.xy = u_xlat16_42.xy * vec2(0.318309873, 0.318309873) + vec2(0.5, 0.5);
        u_xlat16_24.xy = clamp(u_xlat16_24.xy, 0.0, 1.0);
        u_xlat16_42.xy = u_xlat16_24.xy * u_xlat16_24.xy;
        u_xlat16_15.xy = (-u_xlat16_24.xy) * vec2(2.0, 2.0) + vec2(3.0, 3.0);
        u_xlat16_37 = u_xlat16_42.x * u_xlat16_15.x;
        u_xlat16_42.x = u_xlat16_37 * 32.0;
        u_xlatu54 = uint(u_xlat16_42.x);
        u_xlat16_37 = u_xlat16_42.y * u_xlat16_15.y + (-u_xlat16_37);
        u_xlat16_37 = u_xlat16_37 * 32.0 + 0.5;
        u_xlatu39 = uint(u_xlat16_37);
        u_xlatb24.x = int(u_xlatu39)==0;
        u_xlatb40 = u_xlatu54>=32u;
        u_xlatb24.x = u_xlatb40 || u_xlatb24.x;
        u_xlati54 = int(bitfieldInsert(u_xlati38, 0, int(u_xlatu54) & int(0x1F), int(u_xlatu39)));
        u_xlati38 = (u_xlatb24.x) ? u_xlati38 : u_xlati54;
        u_xlat11 = u_xlat16_9 * (-u_xlat11) + vs_TEXCOORD0.xyxy;
        u_xlat16_54 = textureLod(_GBuffer_DepthMipChain, u_xlat11.xy, u_xlat16).x;
        u_xlat12 = u_xlat11 * vec4(2.0, 2.0, 2.0, 2.0) + (-hlslcc_mtx4x4_projection_matrix[2].xyxy);
        u_xlat12 = u_xlat12 + vec4(-1.0, -1.0, -1.0, -1.0);
        u_xlat12 = u_xlat12 / u_xlat6.xyxy;
        u_xlat14.xy = vec2(u_xlat16_54) * u_xlat12.xy;
        u_xlat14.z = (-u_xlat16_54);
        u_xlat24.xyz = (-u_xlat2.xyz) * vec3(0.995999992, 0.995999992, -0.995999992) + u_xlat14.xyz;
        u_xlat11.x = dot(u_xlat24.xyz, u_xlat7.xyw);
        u_xlat54 = dot(u_xlat24.xyz, u_xlat24.xyz);
        u_xlat11.y = (-u_xlat48) + u_xlat11.x;
        u_xlat39 = (-u_xlat33) * u_xlat11.x + u_xlat54;
        u_xlat39 = u_xlat48 * u_xlat48 + u_xlat39;
        u_xlat16_15.x = inversesqrt(u_xlat54);
        u_xlat16_15.y = inversesqrt(u_xlat39);
        u_xlat16_42.xy = u_xlat11.xy * u_xlat16_15.xy;
        u_xlat16_24.xy = abs(u_xlat16_42.xy) * vec2(-0.156582996, -0.156582996) + vec2(1.57079637, 1.57079637);
        u_xlat16_15.xy = -abs(u_xlat16_42.xy) + vec2(1.0, 1.0);
        u_xlat16_15.xy = sqrt(u_xlat16_15.xy);
        u_xlat16_47.xy = u_xlat16_24.xy * u_xlat16_15.xy;
        u_xlatb11.xy = greaterThanEqual(u_xlat16_42.xyxx, vec4(0.0, 0.0, 0.0, 0.0)).xy;
        u_xlat16_24.xy = (-u_xlat16_24.xy) * u_xlat16_15.xy + vec2(3.14159274, 3.14159274);
        u_xlat24.x = (u_xlatb11.x) ? u_xlat16_47.x : u_xlat16_24.x;
        u_xlat24.y = (u_xlatb11.y) ? u_xlat16_47.y : u_xlat16_24.y;
        u_xlat16_42.xy = vec2(u_xlat16_36) + u_xlat24.xy;
        u_xlat16_24.xy = u_xlat16_42.xy * vec2(0.318309873, 0.318309873) + vec2(0.5, 0.5);
        u_xlat16_24.xy = clamp(u_xlat16_24.xy, 0.0, 1.0);
        u_xlat16_42.xy = u_xlat16_24.xy * u_xlat16_24.xy;
        u_xlat16_15.xy = (-u_xlat16_24.xy) * vec2(2.0, 2.0) + vec2(3.0, 3.0);
        u_xlat16_37 = u_xlat16_42.x * u_xlat16_15.x;
        u_xlat16_42.x = u_xlat16_37 * 32.0;
        u_xlatu54 = uint(u_xlat16_42.x);
        u_xlat16_37 = u_xlat16_42.y * u_xlat16_15.y + (-u_xlat16_37);
        u_xlat16_37 = u_xlat16_37 * 32.0 + 0.5;
        u_xlatu39 = uint(u_xlat16_37);
        u_xlatb24.x = int(u_xlatu39)==0;
        u_xlatb40 = u_xlatu54>=32u;
        u_xlatb24.x = u_xlatb40 || u_xlatb24.x;
        u_xlati54 = int(bitfieldInsert(u_xlati38, 0, int(u_xlatu54) & int(0x1F), int(u_xlatu39)));
        u_xlati38 = (u_xlatb24.x) ? u_xlati38 : u_xlati54;
        u_xlat16_54 = textureLod(_GBuffer_DepthMipChain, u_xlat11.zw, u_xlat16).x;
        u_xlat11.xy = vec2(u_xlat16_54) * u_xlat12.zw;
        u_xlat11.z = (-u_xlat16_54);
        u_xlat24.xyz = (-u_xlat2.xyz) * vec3(0.995999992, 0.995999992, -0.995999992) + u_xlat11.xyz;
        u_xlat11.x = dot(u_xlat24.xyz, u_xlat7.xyw);
        u_xlat54 = dot(u_xlat24.xyz, u_xlat24.xyz);
        u_xlat11.y = (-u_xlat48) + u_xlat11.x;
        u_xlat39 = (-u_xlat33) * u_xlat11.x + u_xlat54;
        u_xlat39 = u_xlat48 * u_xlat48 + u_xlat39;
        u_xlat16_15.x = inversesqrt(u_xlat54);
        u_xlat16_15.y = inversesqrt(u_xlat39);
        u_xlat16_42.xy = u_xlat11.xy * u_xlat16_15.xy;
        u_xlat16_24.xy = abs(u_xlat16_42.xy) * vec2(-0.156582996, -0.156582996) + vec2(1.57079637, 1.57079637);
        u_xlat16_15.xy = -abs(u_xlat16_42.xy) + vec2(1.0, 1.0);
        u_xlat16_15.xy = sqrt(u_xlat16_15.xy);
        u_xlat16_47.xy = u_xlat16_24.xy * u_xlat16_15.xy;
        u_xlatb11.xy = greaterThanEqual(u_xlat16_42.xyxx, vec4(0.0, 0.0, 0.0, 0.0)).xy;
        u_xlat16_24.xy = (-u_xlat16_24.xy) * u_xlat16_15.xy + vec2(3.14159274, 3.14159274);
        u_xlat24.x = (u_xlatb11.x) ? u_xlat16_47.x : u_xlat16_24.x;
        u_xlat24.y = (u_xlatb11.y) ? u_xlat16_47.y : u_xlat16_24.y;
        u_xlat16_42.xy = vec2(u_xlat16_36) + u_xlat24.xy;
        u_xlat16_24.xy = u_xlat16_42.xy * vec2(0.318309873, 0.318309873) + vec2(0.5, 0.5);
        u_xlat16_24.xy = clamp(u_xlat16_24.xy, 0.0, 1.0);
        u_xlat16_42.xy = u_xlat16_24.xy * u_xlat16_24.xy;
        u_xlat16_15.xy = (-u_xlat16_24.xy) * vec2(2.0, 2.0) + vec2(3.0, 3.0);
        u_xlat16_36 = u_xlat16_42.x * u_xlat16_15.x;
        u_xlat16_37 = u_xlat16_36 * 32.0;
        u_xlatu54 = uint(u_xlat16_37);
        u_xlat16_36 = u_xlat16_42.y * u_xlat16_15.y + (-u_xlat16_36);
        u_xlat16_36 = u_xlat16_36 * 32.0 + 0.5;
        u_xlatu39 = uint(u_xlat16_36);
        u_xlatb24.x = int(u_xlatu39)==0;
        u_xlatb40 = u_xlatu54>=32u;
        u_xlatb24.x = u_xlatb40 || u_xlatb24.x;
        u_xlati54 = int(bitfieldInsert(u_xlati38, 0, int(u_xlatu54) & int(0x1F), int(u_xlatu39)));
        u_xlati38 = (u_xlatb24.x) ? u_xlati38 : u_xlati54;
        u_xlati38 = bitCount(u_xlati38);
        u_xlat38.x = float(u_xlati38);
        u_xlat38.x = u_xlat38.x * 0.03125;
        u_xlat20 = u_xlat38.x * u_xlat16_53 + u_xlat16_20;
        u_xlat49 = u_xlat49 + u_xlat16_53;
        u_xlat11.x = dot(u_xlat16_10.xy, vec2(-4.37113883e-08, 1.0));
        u_xlat11.y = dot(u_xlat16_10.xy, vec2(-1.0, -4.37113883e-08));
        u_xlatu50 = u_xlatu50 + 1u;
        u_xlat16_20 = u_xlat20;
        u_xlat16_10.xy = u_xlat11.xy;
    }
    SV_Target0.x = u_xlat16_20 / u_xlat49;
    SV_Target0.yzw = vec3(1.0, 0.0, 1.0);
    return;
}